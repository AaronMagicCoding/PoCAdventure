package game.main;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.*;
public class UI {
	
	GameManager gm;
	JFrame window;
	public JTextArea messageText;
	public JTextArea titleText;
	public JPanel bgPanel[] = new JPanel[10];
	public JLabel bgLabel[] = new JLabel[10];
	
	// PLAYER UI
	JPanel inventoryPanel;
	JLabel inventoryLabel[] = new JLabel[12];
	public JLabel bookLabel, deadRatLabel, k1Label, k2Label, magGlassLabel, threadLabel, mapLabel, leafLabel, sentDagLabel, ppcLabel, GBLabel;
		
	public UI(GameManager gm) {
		this.gm = gm;
		
		createMainField();
		createPlayerField();
		generateScreen();
		
		window.setVisible(true);
		
	}
	public void createMainField() {
		// Initializing Window
		window = new JFrame();
		window.setSize(1200,750);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.getContentPane().setBackground(Color.black);
		window.setLayout(null);
		
		// Initializing Message Text
		messageText = new JTextArea("Sample Text");
		messageText.setBounds(50,550,1100,150);
		messageText.setBackground(Color.black);
		messageText.setForeground(Color.white);
		messageText.setEditable(false);
		messageText.setLineWrap(true);
		messageText.setWrapStyleWord(true);
		messageText.setFont(new Font("Times New Roman",Font.PLAIN, 25));
		window.add(messageText);
		
		// Initializing Title
		titleText = new JTextArea("Chapter 1: The Black Hallowed Mercenary : PoC Adventure Game");
		titleText.setBounds(150,0,950,50);
		titleText.setBackground(Color.DARK_GRAY);
		titleText.setForeground(Color.yellow);
		titleText.setEditable(false);
		titleText.setLineWrap(true);
		titleText.setWrapStyleWord(true);
		titleText.setFont(new Font("Algerian",Font.PLAIN, 25));
		window.add(titleText);
	}
	public void createBackground(int bgNum, String bgFileName) {
		bgPanel[bgNum] = new JPanel();
		bgPanel[bgNum].setBounds(50,50,1050,500);
		bgPanel[bgNum].setBackground(Color.blue);
		bgPanel[bgNum].setLayout(null);
		window.add(bgPanel[bgNum]);
		
		bgLabel[bgNum] = new JLabel();
		bgLabel[bgNum].setBounds(0,0,1350,500);
		
		ImageIcon bgIcon = new ImageIcon(getClass().getClassLoader().getResource(bgFileName));
		bgLabel[bgNum].setIcon(bgIcon);
		
		
	}
	public void createObject(int bgNum, int objx, int objy, int objw, int objh, String objFileName,
			String choice1Name, String choice2Name, String choice3Name, String choice1Command, String choice2Command, String choice3Command) {
		// CREATE POP MENU
		JPopupMenu popMenu = new JPopupMenu();
		// CREATE POP MENU ITEMS
		JMenuItem menuItem[] = new JMenuItem[4]; //Use [1],[2]
		menuItem[1] = new JMenuItem(choice1Name);
		menuItem[1].addActionListener(gm.aHandler);
		menuItem[1].setActionCommand(choice1Command);
		popMenu.add(menuItem[1]);
		
		menuItem[2] = new JMenuItem(choice2Name);
		menuItem[2].addActionListener(gm.aHandler);
		menuItem[2].setActionCommand(choice2Command);
		popMenu.add(menuItem[2]);
		
		menuItem[3] = new JMenuItem(choice3Name);
		menuItem[3].addActionListener(gm.aHandler);
		menuItem[3].setActionCommand(choice3Command);
		popMenu.add(menuItem[3]);
		
		// CREATE OBJECTS
		JLabel objectLabel = new JLabel();
		objectLabel.setBounds(objx,objy,objw,objh);
		
		ImageIcon objectIcon = new ImageIcon(getClass().getClassLoader().getResource(objFileName));
		objectLabel.setIcon(objectIcon);
		
		objectLabel.addMouseListener((MouseListener) new MouseListener() {
			public void mouseClicked(MouseEvent e) {}
			public void mousePressed(MouseEvent e) {
				if(SwingUtilities.isRightMouseButton(e)) {
					popMenu.show(objectLabel, e.getX(), e.getY());
				}
			}
			public void mouseReleased(MouseEvent e) {}
			public void mouseEntered(MouseEvent e) {}
			public void mouseExited(MouseEvent e) {}
			
		});
		
		bgPanel[bgNum].add(objectLabel);
		
	}
	public void createArrowButton(int bgNum, int x, int y, int width, int height, String arrowFileName, String command) {
		
		ImageIcon arrowIcon = new ImageIcon(getClass().getClassLoader().getResource(arrowFileName));
		
		JButton arrowButton = new JButton();
		arrowButton.setBounds(x, y, width, height);
		arrowButton.setBackground(null);
		arrowButton.setContentAreaFilled(false);
		arrowButton.setFocusPainted(false);
		arrowButton.setIcon(arrowIcon);
		arrowButton.addActionListener(gm.aHandler);
		arrowButton.setActionCommand(command);
		
		bgPanel[bgNum].add(arrowButton);
	}
	public void createPlayerField() {
		inventoryPanel = new JPanel();
		inventoryPanel.setBounds(50,0,1050,49);
		inventoryPanel.setBackground(Color.darkGray);
		inventoryPanel.setLayout(null);
		window.add(inventoryPanel);
		
		//CREATE ITEMS
		bookLabel = new JLabel();
		ImageIcon bookIcon = new ImageIcon(getClass().getClassLoader().getResource("book.png"));
		Image image = bookIcon.getImage().getScaledInstance(35, 50, Image.SCALE_DEFAULT);
		bookIcon = new ImageIcon(image);
		bookLabel.setIcon(bookIcon);
		inventoryPanel.add(bookLabel);
		
		deadRatLabel = new JLabel();
		ImageIcon deadRatIcon = new ImageIcon(getClass().getClassLoader().getResource("dead rat.png"));
		image = deadRatIcon.getImage().getScaledInstance(35, 72, Image.SCALE_DEFAULT);
		deadRatIcon = new ImageIcon(image);
		deadRatLabel.setIcon(deadRatIcon);
		inventoryPanel.add(deadRatLabel);
		
		k1Label = new JLabel();
		ImageIcon key1Icon = new ImageIcon(getClass().getClassLoader().getResource("Key 1.png"));
		image = key1Icon.getImage().getScaledInstance(35, 45, Image.SCALE_DEFAULT);
		key1Icon = new ImageIcon(image);
		k1Label.setIcon(key1Icon);
		inventoryPanel.add(k1Label);
		
		k2Label = new JLabel();
		ImageIcon key2Icon = new ImageIcon(getClass().getClassLoader().getResource("Key 2.png"));
		image = key2Icon.getImage().getScaledInstance(35, 50, Image.SCALE_DEFAULT);
		key2Icon = new ImageIcon(image);
		k2Label.setIcon(key2Icon);
		inventoryPanel.add(k2Label);
		
		magGlassLabel = new JLabel();
		ImageIcon magGlassIcon = new ImageIcon(getClass().getClassLoader().getResource("magnifying glass.png"));
		image = magGlassIcon.getImage().getScaledInstance(35, 75, Image.SCALE_DEFAULT);
		magGlassIcon = new ImageIcon(image);
		magGlassLabel.setIcon(magGlassIcon);
		inventoryPanel.add(magGlassLabel);
		
		threadLabel = new JLabel();
		ImageIcon threadIcon = new ImageIcon(getClass().getClassLoader().getResource("thread.png"));
		image = threadIcon.getImage().getScaledInstance(35, 50, Image.SCALE_DEFAULT);
		threadIcon = new ImageIcon(image);
		threadLabel.setIcon(threadIcon);
		inventoryPanel.add(threadLabel);
		
		mapLabel = new JLabel();
		ImageIcon mapIcon = new ImageIcon(getClass().getClassLoader().getResource("map.png"));
		image = mapIcon.getImage().getScaledInstance(70, 52, Image.SCALE_DEFAULT);
		mapIcon = new ImageIcon(image);
		mapLabel.setIcon(mapIcon);
		inventoryPanel.add(mapLabel);
		
		leafLabel = new JLabel();
		ImageIcon leafIcon = new ImageIcon(getClass().getClassLoader().getResource("leaf.png"));
		image = leafIcon.getImage().getScaledInstance(35, 50, Image.SCALE_DEFAULT);
		leafIcon = new ImageIcon(image);
		leafLabel.setIcon(leafIcon);
		inventoryPanel.add(leafLabel);
		
		ppcLabel = new JLabel();
		ImageIcon ppcIcon = new ImageIcon(getClass().getClassLoader().getResource("paperclip.png"));
		image = ppcIcon.getImage().getScaledInstance(35, 50, Image.SCALE_DEFAULT);
		ppcIcon = new ImageIcon(image);
		ppcLabel.setIcon(ppcIcon);
		inventoryPanel.add(ppcLabel);
		
		sentDagLabel = new JLabel();
		ImageIcon sentDagIcon = new ImageIcon(getClass().getClassLoader().getResource("Sentinel Dagger.png"));
		image = sentDagIcon.getImage().getScaledInstance(100, 42, Image.SCALE_DEFAULT);
		sentDagIcon = new ImageIcon(image);
		sentDagLabel.setIcon(sentDagIcon);
		inventoryPanel.add(sentDagLabel);
		
		GBLabel = new JLabel();
		ImageIcon GBIcon = new ImageIcon(getClass().getClassLoader().getResource("glass bottle.png"));
		image = GBIcon.getImage().getScaledInstance(35, 75, Image.SCALE_DEFAULT);
		GBIcon = new ImageIcon(image);
		GBLabel.setIcon(GBIcon);
		inventoryPanel.add(GBLabel);
		
	}
	public void generateScreen() {
		
		// SCENE 1
		createBackground(1,"background1700x350.jpg");
		createObject(1,10,300,200,200,"treasure chest.png", "Observe", "Inspect", "Attack", "ObsTC", "InsTC", "AttTC");
		createObject(1,260,350,50,50, "book.png","Observe", "Inspect", "", "ObsBook", "InsBook", "AttBook");
		createObject(1,825,125,50,75, "glass bottle.png", "Observe", "Inspect", "Attack", "ObsGB", "InsGB", "AttGB");
		createObject(1,950,400,100,72, "dead rat.png", "Observe", "Inspect", "Attack", "ObsDR", "InsDR", "AttDR");
		createObject(1,700,420,100,52, "map.png","Observe", "Inspect", "Attack", "ObsMap", "InsMap", "AttMap");
		createObject(1,450,410,50,50, "thread.png", "Observe", "Inspect", "", "ObsThread", "InsThread", "AttThread");
		createObject(1,550,430,50,50, "paperclip.png", "Observe", "Inspect", "", "ObsPPC", "InsPPC", "AttPPC");
		createObject(1,1000,460,50,50, "leaf.png", "Observe", "Inspect", "", "ObsLeaf", "InsLeaf", "AttLeaf");
		createObject(1,400,270,75,75, "magnifying glass.png", "Observe", "Inspect", "", "ObsMagGlass","InsMagGlass","AttMagGlass");
		createArrowButton(1,0,200,50,50, "left arrow button 1.png","goScene2");
		bgPanel[1].add(bgLabel[1]);
		
		// SCENE 2
		createBackground(2, "background2.png");
		createArrowButton(2,0,200,50,50,"left arrow button 2.png","goScene3");
		bgPanel[2].add(bgLabel[2]);
		
		// SCENE 3
		createBackground(3, "background3.png");
		createObject(3,600,0,300,462,"Guard.png","Observe","Distract","Attack", "ObsGuard", "InsGuard", "AttGuard");
		createObject(3,450,0,100,100,"lantern.png","Observe","Inspect","","ObsLantern","InsLantern","AttLantern");
		createArrowButton(3,0,200,50,50,"left arrow button 3.png","goScene4");
		bgPanel[3].add(bgLabel[3]);
		
		// SCENE 4
		createBackground(4, "background4.png");
		bgPanel[4].add(bgLabel[4]);
	}
	
	
}
